Fluid Web Release 1.0.0b

New Task Model

{
  "id": "taskId", //  Task Id (required)
  "fluidId": "fluidId", // Auto generated Task Id from web Client
  "name": "taskName", // Task name (unique) (required)
  "title": "taskTitle", // Task title display
  "glyph": "fa fa-gears", // Task icon
  "useImg": false //if True will use img src instead of glyphicon
  "imgSrc":"app/img/src/icon.png", //Image icon src
  "size": 50, // Task panel width 25, 50, 75 and 100 percent
  "locked":false, // Lock the task panel (Task panel cannot be resized, minimized, closed & pinned)
  "pinned":false,//If true, pin the task panel (glue the task panel on screen)
  "active": true,//If true, shows the task panel on fluidFrame
  "showToolBar":true,// If true, shows the toolbar & page breadcrumb
  "page":"page1",// Current page of the task
  "pageParam":"id",//TODO: parameter for url, if useAction use json object for param
  "useAction":false,//TODO: If true, initAction is required, uses the specified action of the current page for resultData will disregard autoGet
  "initAction":"action1",//TODO: init the desired of the current page, the return will be used as resultData if useAction is TRUE and the method is get
  "lazyLoad": true,// Will lazily load the specified module
  "moduleJS": "ngModuleName",// AngularJS module name
  "moduleFiles": "app/Module1/module1-controller.js,app/Module1/module1.css", // Resources to initialized lazily
  "pages": [
    {
      "id":"pageID", //required page Id
      "name": "page1", //Page name (unique)
      "title": "page1",// Page display title
      "home": "app/Module1/pages/page1.html", // html for this page
      "get": "app/Module1/pages/page1-data.json", //preset get uri
      "post": "services/page/post", //preset post uri
      "delURL": "services/page/delete", //preset delete uri
      "put": "services/page/put",//preset put uri
      "autoGet": true,//If TRUE, will get the result data from get uri
      "isHome": true,//Will be the main page of the task (must only specifiy one home page per task)
      "actions": [
        {
          "name":"action1", //TODO: action name
          "url": "services/:param1?field=:param2",
          "param": {
            "param1": "fluid",
            "param2": "pin"
          }, //TODO: action param as used in $resource
          "method": "put"//TODO: action method
        }
      ] //TODO: pre configured actions for $resource (invoked as promise = fluid.action(actionName,customParam))
    }
  ],
  "stateAjax": {
    "url": "stateUrl",
    "method": "PUT/POST"
  }//TODO: state ajax for task state saving e.g. close, pin, minimize, resize , etc..
}



//TODO: use template cache in for pagees